{"id":"../node_modules/@apollo/client/react/hooks/useQuery.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/react/hooks/useQuery.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1610271241244},{"name":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/react/hooks/package.json","includedInParent":true,"mtime":499162500000},{"name":"./utils/useBaseQuery.js","loc":{"line":1,"column":29},"parent":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/react/hooks/useQuery.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/react/hooks/utils/useBaseQuery.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useQuery = useQuery;\n\nvar _useBaseQuery = require(\"./utils/useBaseQuery.js\");\n\nfunction useQuery(query, options) {\n  return (0, _useBaseQuery.useBaseQuery)(query, options, false);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":17}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":10,"column":18}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":23}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":10,"column":25}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":32}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":10,"column":47},"generated":{"line":10,"column":34}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":41},"generated":{"line":11,"column":41}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":11,"column":46}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":48},"generated":{"line":11,"column":48}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":11,"column":55}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":57},"generated":{"line":11,"column":57}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":11,"column":62}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":11,"column":63}},{"source":"../../../src/react/hooks/useQuery.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":12,"column":0}}],"sources":{"../../../src/react/hooks/useQuery.ts":"import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n"},"lineCount":null}},"error":null,"hash":"b968cf02a16a7730082854c226820bba","cacheData":{"env":{}}}