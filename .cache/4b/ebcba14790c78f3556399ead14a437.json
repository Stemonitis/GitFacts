{"id":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1605524770825},{"name":"../../validators/generated","loc":{"line":8,"column":25},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/validators/generated/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = {};\n  const bases = {};\n  const typeGroups = [];\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isAnyTypeAnnotation)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isFlowBaseAnnotation)(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if ((0, _generated.isUnionTypeAnnotation)(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isGenericTypeAnnotation)(node)) {\n      const name = node.id.name;\n\n      if (generics[name]) {\n        let existing = generics[name];\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const type of Object.keys(bases)) {\n    types.push(bases[type]);\n  }\n\n  for (const name of Object.keys(generics)) {\n    types.push(generics[name]);\n  }\n\n  return types;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = {};\n  const bases = {};\n  const typeGroups = [];\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isAnyTypeAnnotation)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isFlowBaseAnnotation)(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if ((0, _generated.isUnionTypeAnnotation)(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isGenericTypeAnnotation)(node)) {\n      const name = node.id.name;\n\n      if (generics[name]) {\n        let existing = generics[name];\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const type of Object.keys(bases)) {\n    types.push(bases[type]);\n  }\n\n  for (const name of Object.keys(generics)) {\n    types.push(generics[name]);\n  }\n\n  return types;\n}"},"lineCount":74}},"error":null,"hash":"4f35feeb23c79f8cc392821c22afe50d","cacheData":{"env":{}}}