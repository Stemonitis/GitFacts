{"id":"../node_modules/@babel/types/lib/definitions/flow.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1605524770825},{"name":"./utils","loc":{"line":3,"column":45},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/definitions/flow.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/definitions/utils.js"}],"generated":{"js":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst defineInterfaceishType = (name, typeParameterType = \"TypeParameterDeclaration\") => {\n  (0, _utils.default)(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\"id\", \"typeParameters\", \"extends\", \"mixins\", \"implements\", \"body\"],\n    aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: (0, _utils.validateType)(\"Identifier\"),\n      typeParameters: (0, _utils.validateOptionalType)(typeParameterType),\n      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ClassImplements\")),\n      body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n    }\n  });\n};\n\n(0, _utils.default)(\"AnyTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"BooleanTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"DeclareClass\");\n(0, _utils.default)(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    predicate: (0, _utils.validateOptionalType)(\"DeclaredPredicate\")\n  }\n});\ndefineInterfaceishType(\"DeclareInterface\");\n(0, _utils.default)(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)(\"BlockStatement\"),\n    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"CommonJS\", \"ES\"))\n  }\n});\n(0, _utils.default)(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\n(0, _utils.default)(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: (0, _utils.validateOptionalType)(\"Flow\"),\n    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"])),\n    source: (0, _utils.validateOptionalType)(\"StringLiteral\"),\n    default: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: (0, _utils.validateType)(\"StringLiteral\"),\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\n(0, _utils.default)(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"Flow\", \"FlowPredicate\"],\n  fields: {\n    value: (0, _utils.validateType)(\"Flow\")\n  }\n});\n(0, _utils.default)(\"ExistsTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\"]\n});\n(0, _utils.default)(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FunctionTypeParam\")),\n    rest: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    returnType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  aliases: [\"Flow\"],\n  fields: {\n    name: (0, _utils.validateOptionalType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\n(0, _utils.default)(\"InferredPredicate\", {\n  aliases: [\"Flow\", \"FlowPredicate\"]\n});\n(0, _utils.default)(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"InterfaceDeclaration\");\n(0, _utils.default)(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n    body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"MixedTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"EmptyTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"number\"))\n  }\n});\n(0, _utils.default)(\"NumberTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  builder: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\", \"exact\"],\n  fields: {\n    properties: (0, _utils.validate)((0, _utils.arrayOfType)([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"])),\n    indexers: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeIndexer\")),\n    callProperties: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeCallProperty\")),\n    internalSlots: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeInternalSlot\")),\n    exact: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateOptionalType)(\"Identifier\"),\n    key: (0, _utils.validateType)(\"FlowType\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    key: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"init\", \"get\", \"set\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    proto: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    qualification: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"])\n  }\n});\n(0, _utils.default)(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"string\"))\n  }\n});\n(0, _utils.default)(\"StringTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"SymbolTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ThisTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeAnnotation\", {\n  aliases: [\"Flow\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"Flow\", \"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"TypeParameter\", {\n  aliases: [\"Flow\"],\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    bound: (0, _utils.validateOptionalType)(\"TypeAnnotation\"),\n    default: (0, _utils.validateOptionalType)(\"FlowType\"),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"TypeParameterDeclaration\", {\n  aliases: [\"Flow\"],\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"TypeParameter\"))\n  }\n});\n(0, _utils.default)(\"TypeParameterInstantiation\", {\n  aliases: [\"Flow\"],\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"Variance\", {\n  aliases: [\"Flow\"],\n  builder: [\"kind\"],\n  fields: {\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"minus\", \"plus\"))\n  }\n});\n(0, _utils.default)(\"VoidTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    body: (0, _utils.validateType)([\"EnumBooleanBody\", \"EnumNumberBody\", \"EnumStringBody\", \"EnumSymbolBody\"])\n  }\n});\n(0, _utils.default)(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumBooleanMember\")\n  }\n});\n(0, _utils.default)(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\")\n  }\n});\n(0, _utils.default)(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([\"EnumStringMember\", \"EnumDefaultedMember\"])\n  }\n});\n(0, _utils.default)(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"EnumDefaultedMember\")\n  }\n});\n(0, _utils.default)(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"BooleanLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"NumericLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/flow.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}}],"sources":{"../node_modules/@babel/types/lib/definitions/flow.js":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst defineInterfaceishType = (name, typeParameterType = \"TypeParameterDeclaration\") => {\n  (0, _utils.default)(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\"id\", \"typeParameters\", \"extends\", \"mixins\", \"implements\", \"body\"],\n    aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: (0, _utils.validateType)(\"Identifier\"),\n      typeParameters: (0, _utils.validateOptionalType)(typeParameterType),\n      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ClassImplements\")),\n      body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n    }\n  });\n};\n\n(0, _utils.default)(\"AnyTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"BooleanTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"DeclareClass\");\n(0, _utils.default)(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    predicate: (0, _utils.validateOptionalType)(\"DeclaredPredicate\")\n  }\n});\ndefineInterfaceishType(\"DeclareInterface\");\n(0, _utils.default)(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)(\"BlockStatement\"),\n    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"CommonJS\", \"ES\"))\n  }\n});\n(0, _utils.default)(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\n(0, _utils.default)(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: (0, _utils.validateOptionalType)(\"Flow\"),\n    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"])),\n    source: (0, _utils.validateOptionalType)(\"StringLiteral\"),\n    default: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: (0, _utils.validateType)(\"StringLiteral\"),\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\n(0, _utils.default)(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"Flow\", \"FlowPredicate\"],\n  fields: {\n    value: (0, _utils.validateType)(\"Flow\")\n  }\n});\n(0, _utils.default)(\"ExistsTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\"]\n});\n(0, _utils.default)(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FunctionTypeParam\")),\n    rest: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    returnType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  aliases: [\"Flow\"],\n  fields: {\n    name: (0, _utils.validateOptionalType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\n(0, _utils.default)(\"InferredPredicate\", {\n  aliases: [\"Flow\", \"FlowPredicate\"]\n});\n(0, _utils.default)(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"InterfaceDeclaration\");\n(0, _utils.default)(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n    body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"MixedTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"EmptyTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"number\"))\n  }\n});\n(0, _utils.default)(\"NumberTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  builder: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\", \"exact\"],\n  fields: {\n    properties: (0, _utils.validate)((0, _utils.arrayOfType)([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"])),\n    indexers: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeIndexer\")),\n    callProperties: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeCallProperty\")),\n    internalSlots: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ObjectTypeInternalSlot\")),\n    exact: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\n(0, _utils.default)(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateOptionalType)(\"Identifier\"),\n    key: (0, _utils.validateType)(\"FlowType\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    key: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"init\", \"get\", \"set\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    proto: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"Flow\", \"UserWhitespacable\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  aliases: [\"Flow\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    qualification: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"])\n  }\n});\n(0, _utils.default)(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"string\"))\n  }\n});\n(0, _utils.default)(\"StringTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"SymbolTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"ThisTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeAnnotation\", {\n  aliases: [\"Flow\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\n(0, _utils.default)(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"Flow\", \"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\n(0, _utils.default)(\"TypeParameter\", {\n  aliases: [\"Flow\"],\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    bound: (0, _utils.validateOptionalType)(\"TypeAnnotation\"),\n    default: (0, _utils.validateOptionalType)(\"FlowType\"),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\n(0, _utils.default)(\"TypeParameterDeclaration\", {\n  aliases: [\"Flow\"],\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"TypeParameter\"))\n  }\n});\n(0, _utils.default)(\"TypeParameterInstantiation\", {\n  aliases: [\"Flow\"],\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"Flow\", \"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\n(0, _utils.default)(\"Variance\", {\n  aliases: [\"Flow\"],\n  builder: [\"kind\"],\n  fields: {\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"minus\", \"plus\"))\n  }\n});\n(0, _utils.default)(\"VoidTypeAnnotation\", {\n  aliases: [\"Flow\", \"FlowType\", \"FlowBaseAnnotation\"]\n});\n(0, _utils.default)(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    body: (0, _utils.validateType)([\"EnumBooleanBody\", \"EnumNumberBody\", \"EnumStringBody\", \"EnumSymbolBody\"])\n  }\n});\n(0, _utils.default)(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumBooleanMember\")\n  }\n});\n(0, _utils.default)(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\")\n  }\n});\n(0, _utils.default)(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicit: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([\"EnumStringMember\", \"EnumDefaultedMember\"])\n  }\n});\n(0, _utils.default)(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"EnumDefaultedMember\")\n  }\n});\n(0, _utils.default)(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"BooleanLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"NumericLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\n(0, _utils.default)(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});"},"lineCount":461}},"error":null,"hash":"cbd905d5f60f4b7bb982bec55b434027","cacheData":{"env":{}}}