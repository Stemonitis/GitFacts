{"id":"../node_modules/resolve/lib/core.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/resolve/package.json","includedInParent":true,"mtime":1605524771292},{"name":"./core.json","loc":{"line":45,"column":19},"parent":"/home/mysh/програмування/GitFacts/node_modules/resolve/lib/core.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/resolve/lib/core.json"},{"name":"process","parent":"/home/mysh/програмування/GitFacts/node_modules/resolve/lib/core.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/resolve/lib/core.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/resolve/lib/core.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}}],"sources":{"../node_modules/resolve/lib/core.js":"var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n"},"lineCount":55}},"error":null,"hash":"a13b9206784591ed3db966ec93bfdbc3","cacheData":{"env":{}}}