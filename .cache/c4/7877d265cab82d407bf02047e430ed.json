{"id":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1605524770825},{"name":"../definitions","loc":{"line":8,"column":27},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/definitions/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNodesEquivalent;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNodesEquivalent(a, b) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = _definitions.VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    if (typeof a[field] !== typeof b[field]) {\n      return false;\n    }\n\n    if (a[field] == null && b[field] == null) {\n      continue;\n    } else if (a[field] == null || b[field] == null) {\n      return false;\n    }\n\n    if (Array.isArray(a[field])) {\n      if (!Array.isArray(b[field])) {\n        return false;\n      }\n\n      if (a[field].length !== b[field].length) {\n        return false;\n      }\n\n      for (let i = 0; i < a[field].length; i++) {\n        if (!isNodesEquivalent(a[field][i], b[field][i])) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (typeof a[field] === \"object\" && !(visitorKeys == null ? void 0 : visitorKeys.includes(field))) {\n      for (const key of Object.keys(a[field])) {\n        if (a[field][key] !== b[field][key]) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (!isNodesEquivalent(a[field], b[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"../node_modules/@babel/types/lib/validators/isNodesEquivalent.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNodesEquivalent;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNodesEquivalent(a, b) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = _definitions.VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    if (typeof a[field] !== typeof b[field]) {\n      return false;\n    }\n\n    if (a[field] == null && b[field] == null) {\n      continue;\n    } else if (a[field] == null || b[field] == null) {\n      return false;\n    }\n\n    if (Array.isArray(a[field])) {\n      if (!Array.isArray(b[field])) {\n        return false;\n      }\n\n      if (a[field].length !== b[field].length) {\n        return false;\n      }\n\n      for (let i = 0; i < a[field].length; i++) {\n        if (!isNodesEquivalent(a[field][i], b[field][i])) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (typeof a[field] === \"object\" && !(visitorKeys == null ? void 0 : visitorKeys.includes(field))) {\n      for (const key of Object.keys(a[field])) {\n        if (a[field][key] !== b[field][key]) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (!isNodesEquivalent(a[field], b[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}"},"lineCount":67}},"error":null,"hash":"1c880ad6c801033eca6b01c67962eb13","cacheData":{"env":{}}}