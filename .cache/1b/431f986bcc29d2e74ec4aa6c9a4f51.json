{"id":"../node_modules/@babel/template/lib/parse.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/package.json","includedInParent":true,"mtime":1605524770635},{"name":"@babel/types","loc":{"line":8,"column":40},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/lib/parse.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/index.js"},{"name":"@babel/parser","loc":{"line":10,"column":22},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/lib/parse.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/parser/lib/index.js"},{"name":"@babel/code-frame","loc":{"line":12,"column":25},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/lib/parse.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/code-frame/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@babel/template/lib/parse.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}}],"sources":{"../node_modules/@babel/template/lib/parse.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}"},"lineCount":179}},"error":null,"hash":"9558bab635b5a126c35a5501cf86932e","cacheData":{"env":{}}}