{"id":"../node_modules/@babel/template/lib/formatters.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/package.json","includedInParent":true,"mtime":1605524770635}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ({\n    program\n  }) => {\n    if (program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    const expression = program.body[0].expression;\n\n    if (expression.start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ast => ast.program.body[0].expression\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/template/lib/formatters.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/@babel/template/lib/formatters.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ({\n    program\n  }) => {\n    if (program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    const expression = program.body[0].expression;\n\n    if (expression.start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ast => ast.program.body[0].expression\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;"},"lineCount":63}},"error":null,"hash":"12a34fb26a9f20b8a4d2cfb0fa25fa2e","cacheData":{"env":{}}}