{"id":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1612841288770},{"name":"/home/mysh/програмування/GitFacts/node_modules/graphql/package.json","includedInParent":true,"mtime":1612382759190},{"name":"../polyfills/symbols.mjs","loc":{"line":1,"column":38},"parent":"/home/mysh/програмування/GitFacts/node_modules/graphql/jsutils/isAsyncIterable.mjs","resolved":"/home/mysh/програмування/GitFacts/node_modules/graphql/polyfills/symbols.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAsyncIterable;\n\nvar _symbols = require(\"../polyfills/symbols.mjs\");\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n */\n// eslint-disable-next-line no-redeclare\nfunction isAsyncIterable(maybeAsyncIterable) {\n  return typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0 ? void 0 : maybeAsyncIterable[_symbols.SYMBOL_ASYNC_ITERATOR]) === 'function';\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":15}},{"name":"isAsyncIterable","generated":{"line":15,"column":9},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":24}},{"generated":{"line":15,"column":24},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":15}},{"name":"maybeAsyncIterable","generated":{"line":15,"column":25},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":40}},{"generated":{"line":15,"column":43},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":15}},{"generated":{"line":15,"column":45},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":8,"column":60}},{"generated":{"line":16,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":2}},{"generated":{"line":16,"column":9},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":9}},{"name":"maybeAsyncIterable","generated":{"line":16,"column":17},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":17}},{"generated":{"line":16,"column":35},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":35}},{"generated":{"line":16,"column":40},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":40}},{"generated":{"line":16,"column":44},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":17}},{"name":"maybeAsyncIterable","generated":{"line":16,"column":48},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":48}},{"generated":{"line":16,"column":66},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":66}},{"generated":{"line":16,"column":71},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":71}},{"generated":{"line":16,"column":76},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":76}},{"generated":{"line":16,"column":77},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":17}},{"generated":{"line":16,"column":80},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":80}},{"generated":{"line":16,"column":85},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":85}},{"generated":{"line":16,"column":86},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":17}},{"name":"maybeAsyncIterable","generated":{"line":16,"column":89},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":89}},{"generated":{"line":16,"column":107},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":107}},{"name":"SYMBOL_ASYNC_ITERATOR","generated":{"line":16,"column":108},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":108}},{"generated":{"line":16,"column":138},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":107}},{"generated":{"line":16,"column":139},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":9}},{"generated":{"line":16,"column":145},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":136}},{"generated":{"line":16,"column":155},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":9,"column":2}},{"generated":{"line":17,"column":0},"source":"../node_modules/graphql/jsutils/isAsyncIterable.mjs","original":{"line":10,"column":1}}],"sources":{"../node_modules/graphql/jsutils/isAsyncIterable.mjs":"import { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function isAsyncIterable(maybeAsyncIterable) {\n  return typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0 ? void 0 : maybeAsyncIterable[SYMBOL_ASYNC_ITERATOR]) === 'function';\n}\n"},"lineCount":null}},"error":null,"hash":"0394eeb5b416d1396a72130b26bb0738","cacheData":{"env":{}}}