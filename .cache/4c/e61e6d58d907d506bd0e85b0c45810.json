{"id":"../node_modules/@apollo/client/cache/core/types/common.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/cache/core/types/common.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1610693953389},{"name":"/home/mysh/програмування/GitFacts/node_modules/@apollo/client/cache/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MissingFieldError = void 0;\n\nvar MissingFieldError = function () {\n  function MissingFieldError(message, path, query, clientOnly, variables) {\n    this.message = message;\n    this.path = path;\n    this.query = query;\n    this.clientOnly = clientOnly;\n    this.variables = variables;\n  }\n\n  return MissingFieldError;\n}();\n\nexports.MissingFieldError = MissingFieldError;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":21}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":24}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":36}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":11}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":28}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":9,"column":29}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":36}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":9,"column":38}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":42}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":9,"column":44}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":49}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":9,"column":51}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":61}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":9,"column":63}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":9,"column":72}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":51},"generated":{"line":9,"column":74}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":10,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":10,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":10,"column":16}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":10,"column":19}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":10,"column":26}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":11,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":11,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":11,"column":13}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":11,"column":16}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":11,"column":20}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":12,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":12,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":12,"column":14}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":12,"column":17}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":12,"column":22}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":13,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":13,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":13,"column":19}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":13,"column":22}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":13,"column":32}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":14,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":14,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":14,"column":18}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":14,"column":21}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":14,"column":30}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":17,"column":9}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":17,"column":26}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":18,"column":1}},{"source":"../../../../src/cache/core/types/common.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":18,"column":3}}],"sources":{"../../../../src/cache/core/types/common.ts":"import { FieldNode } from 'graphql';\n\nimport {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n} from '../../../utilities';\n\nimport { StorageType } from '../../inmemory/policies';\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport class MissingFieldError {\n  constructor(\n    public readonly message: string,\n    public readonly path: (string | number)[],\n    public readonly query: import('graphql').DocumentNode,\n    public readonly clientOnly: boolean,\n    public readonly variables?: Record<string, any>,\n  ) {}\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference,\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean,\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\nexport type Modifier<T> = (value: T, details: {\n  DELETE: any;\n  INVALIDATE: any;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n}) => T;\n\nexport type Modifiers = {\n  [fieldName: string]: Modifier<any>;\n};\n"},"lineCount":null}},"error":null,"hash":"102393621fc93304c210fb29218af913","cacheData":{"env":{}}}