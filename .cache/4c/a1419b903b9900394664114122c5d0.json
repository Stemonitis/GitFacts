{"id":"../node_modules/@babel/template/lib/populate.js","dependencies":[{"name":"/home/mysh/програмування/GitFacts/package.json","includedInParent":true,"mtime":1611418560078},{"name":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/package.json","includedInParent":true,"mtime":1605524770635},{"name":"@babel/types","loc":{"line":8,"column":40},"parent":"/home/mysh/програмування/GitFacts/node_modules/@babel/template/lib/populate.js","resolved":"/home/mysh/програмування/GitFacts/node_modules/@babel/types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@babel/template/lib/populate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}}],"sources":{"../node_modules/@babel/template/lib/populate.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"},"lineCount":127}},"error":null,"hash":"1f0e73a41c9dbd6bd2b90fdb04bc73f7","cacheData":{"env":{}}}